extends layout

block content
    if user
        | Вы вошли.
        a#logout Выйти
    else
        | Вы не вошли.
    .chat-wrapper
        .connected-users#connected_users
        .chat-head
            span
                h2 Чат
        .chat-body
            ul.messages#msgs
        .chat-input
            textarea.chat-text#chat_text(placeholder="Type your message here")
    script(type="text/javascript").
        var socket = io();
        var $chat_text = $('#chat_text');
        var $messages = $('#msgs');
        var _users = [];
        var userinfo = {};


        /* GET users online */
        /*  END  */

        /* GET user informatio */

        $chat_text.keypress(function(e){
           if(e.which == 13){
               var message = $chat_text.val();
               if(message.length > 1) {
                   if(message.length > 3){ //private message
                       var whisper_regex = /^[\\\/]w\s([A-Za-z0-9_]+)\s(.+)/i;
                       var match = message.match(whisper_regex);
                       if(match){//if username and msg provided
                           var to = match[1];
                           var msg = match[2];
                           if(to === userinfo.username) return false;// we don't need to send private messages to ourselves
                           if($.inArray(to, _users) !== -1){
                               socket.emit('chat:send_message:private', {to: to, msg: msg});
                               sendMessage(msg, 'left', true);
                               return false;
                           }
                           else{
                               //...
                               return false;
                           }
                       }

                   }

                   socket.emit('chat:send_message', message);
                   sendMessage(message, 'left', false);
                   return false;
               }
           }
        });
        $('#logout').on('click', function(){
            $.post('/logout', function(data){
                $('#logout').text("Вы вышли!");
            });
        });
        socket.on('chat:send_message', function(msg){
            sendMessage(msg, "right", false);
        });

        socket.on('chat:send_message:private', function(msg){
            sendMessage(msg, 'right', true);
        });



        socket.on('clients:get:history', function(data){
            function write(msg, first, second){
                console.log(first, " = ", second);
                if(first === second){
                    sendMessage(msg, 'left', false);
                }
                else{
                    sendMessage(msg, 'right', false);
                }
            }

            _.each(data, function(record){
                write(record.message, record.username, userinfo.username)
            });
        });

        socket.on('clients:get:online', function(users){
            console.log('test');
            users.forEach(function(user) {
                        $('#connected_users').append("<p>"+user+"</p>");
                        _users.push(user);
                    }
            );
        });

        socket.on('clients:get:information', function(data){
            userinfo = _.clone(data);
        });

        socket.on('clients:join', function(username){
            sendMessage(username + "connected", "center", false);
        });

        socket.on('not logged in', function(){
            location.href = "/login";
        });

        var sendMessage = function(message, align, whisper){
            var color = "white";
            if(whisper) color = "pink";

            var li = $("<li>", {
                css: {
                    'text-align': align,
                    'color': color
                }
            }).text(message);
            $messages.append(li);
        };